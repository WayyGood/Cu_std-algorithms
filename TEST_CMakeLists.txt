cmake_minimum_required(VERSION 2.8)

project(tests)

execute_process(COMMAND echo DOWNLOADING...
                COMMAND curl -L https://edrickhong.github.io/Pages/testfiles.zip
                        -o testfiles.zip)

execute_process(COMMAND unzip -x testfiles.zip)

option(DEBUG "" ON)

if(DEBUG)

  add_definitions(-DDEBUG)

endif()

# set(CMAKE_C_COMPILER /usr/bin/clang) set(CMAKE_CXX_COMPILER /usr/bin/clang++)

set(PLATFORM_INCLUDES "${CMAKE_BINARY_DIR}/../include/cu/linux")

set(PLATFORM_INCLUDES
      "${CMAKE_SOURCE_DIR}/include/cu/linux"
      "/usr/include/dbus-1.0/"
      "/usr/lib/x86_64-linux-gnu/dbus-1.0/include/" #ubuntu dbus-arch-deps.h location
      "/usr/lib/dbus-1.0/include/" #fedora dbus-arch-deps.h location
     )

# Include Directory
include_directories(${PLATFORM_INCLUDES}
                    "${CMAKE_BINARY_DIR}/../include/cu/mode/"
                    "${CMAKE_BINARY_DIR}/../include"
                    "${CMAKE_BINARY_DIR}/../include/cu"
                    "${CMAKE_BINARY_DIR}/../include/cu/amd64/"
                    "${CMAKE_BINARY_DIR}/../tests/")

# -fno-omit-frame-pointer is for profiling
set(
  OPT_FLAGS
  "-O0 -march=x86-64 -fno-omit-frame-pointer -fno-fast-math -fno-exceptions -fno-rtti"
  )
set(STRICT_FLAGS "")

set(FLAGS "-msse4.1 -mfma -g -std=c++14 ${OPT_FLAGS} ${STRICT_FLAGS} ${CLANG_DEBUG}")

# output with debug info
set(CMAKE_CXX_FLAGS ${FLAGS})

# disable wayland extensions. don't need it for ci tests
add_definitions(-DNO_WAYLAND_EXTENSIONS)

file(GLOB CU_STD src/cu_std/cu/gui_bin.cpp src/cu_std/cu/main.cpp)

set(DL_LIB "libdl.so")

set(PTHREAD_LIB "libpthread.so")

set(PLATFORM_LIBS ${DL_LIB} ${PTHREAD_LIB})

file(GLOB TESTS "tests/main.cpp")

add_executable(ci_test ${TESTS})

add_library(cu_std STATIC ${CU_STD})

target_link_libraries(ci_test cu_std ${PLATFORM_LIBS})
